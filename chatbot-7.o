<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chatbot</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <style>
        /* Chatbot Icon */
        .chatbot-icon {
            position: fixed;
            bottom: 20px;
            right: 20px;
            width: 50px;
            height: 50px;
            background-color: #007bff;
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
            color: white;
            font-size: 20px;
            cursor: pointer;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            z-index: 1000;
            transition: background-color 0.3s ease;
        }

        .chatbot-icon:hover {
            background-color: #0056b3;
        }

        /* Chatbot Container */
        .chatbot-container {
            position: fixed;
            bottom: 80px;
            right: 20px;
            width: 320px; /* Increased width */
            height: 400px; /* Increased height */
            background-color: #fff;
            border: 1px solid #ddd;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            z-index: 1000;
            transform: translateY(150%);
            transition: transform 0.3s ease;
            display: flex;
            flex-direction: column;
        }

        .chatbot-container.active {
            transform: translateY(0);
        }

        /* Chatbot Header */
        #header {
            background-color: #007bff;
            color: white;
            padding: 10px;
            border-top-left-radius: 10px;
            border-top-right-radius: 10px;
            font-size: 1em;
            font-weight: bold;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        /* Close Button */
        #close-button {
            cursor: pointer;
            font-size: 18px;
            color: white;
            transition: color 0.3s ease;
        }

        #close-button:hover {
            color: #ff4d4d; /* Red color on hover */
        }

        /* Chatbot Conversation */
        #conversation {
            flex: 1;
            overflow-y: auto;
            padding: 10px;
            background-color: #f9f9f9;
            max-height: 300px; /* Increased conversation height */
        }

        /* Chatbot Input Form */
        #input-form {
            display: flex;
            align-items: center;
            border-top: 1px solid #ddd;
            padding: 10px;
            background-color: #fff;
        }

        #input-field {
            flex: 1;
            height: 35px;
            border: 1px solid #ddd;
            border-radius: 5px;
            padding: 0 10px;
            font-size: 14px;
            outline: none; /* Remove focus outline */
            background-color: #fff; /* Ensure background is white */
        }

        #input-field:focus {
            border-color: #007bff; /* Highlight input field on focus */
        }

        #submit-button {
            background-color: transparent;
            border: none;
            margin-left: 10px;
            cursor: pointer;
            color: #007bff;
            font-size: 18px;
        }

        #submit-button:hover {
            color: #0056b3;
        }

        /* Chatbot Messages */
        .chatbot-message {
            margin-bottom: 10px;
        }

        .chatbot-text {
            background-color: #e9ecef;
            padding: 8px 12px;
            border-radius: 5px;
            display: inline-block;
            max-width: 80%;
            font-size: 14px;
        }

        .user-message {
            text-align: right;
        }

        .user-message .chatbot-text {
            background-color: #007bff;
            color: white;
        }

        /* Exit Message Frame */
        .exit-frame {
            border: 2px solid #007bff;
            border-radius: 10px;
            padding: 8px;
            background-color: #f0f8ff;
            margin: 10px 0;
            text-align: center;
            font-weight: bold;
            color: #007bff;
            font-size: 14px;
        }
    </style>
</head>
<body>
    <!-- Chatbot Icon -->
    <div class="chatbot-icon" id="chatbot-icon">
        <i class="fas fa-comment"></i>
    </div>

    <!-- Chatbot Container -->
    <div class="chatbot-container" id="chatbot-container">
        <div id="header">
            <h1>Chatbot</h1>
            <span id="close-button">&times;</span> <!-- Close button -->
        </div>
        <div id="chatbot">
            <div id="conversation">
                <div class="chatbot-message">
                    <p class="chatbot-text">Hi! I'm Pavankumar ðŸ‘‹. How can I assist you today? Please choose an option:</p>
                    <p class="chatbot-text">1. Ask a question</p>
                    <p class="chatbot-text">2. Learn about my skills</p>
                    <p class="chatbot-text">3. Main Menu</p>
                    <p class="chatbot-text">4. Exit</p>
                </div>
            </div>
            <form id="input-form">
                <input id="input-field" type="text" placeholder="Type your message here" autocomplete="off">
                <button id="submit-button" type="submit">
                    <i class="fas fa-paper-plane"></i>
                </button>
            </form>
        </div>
    </div>

    <script>
        // Get chatbot elements
        const chatbotIcon = document.getElementById('chatbot-icon');
        const chatbotContainer = document.getElementById('chatbot-container');
        const inputForm = document.getElementById('input-form');
        const inputField = document.getElementById('input-field');
        const conversation = document.getElementById('conversation');
        const closeButton = document.getElementById('close-button');

        // Track if the chatbot is open
        let isChatbotOpen = false;

        // Toggle chatbot visibility
        chatbotIcon.addEventListener('click', () => {
            isChatbotOpen = !isChatbotOpen;
            chatbotContainer.classList.toggle('active', isChatbotOpen);
        });

        // Close chatbot when close button is clicked
        closeButton.addEventListener('click', () => {
            isChatbotOpen = false;
            chatbotContainer.classList.remove('active');
        });

        // Track if the chatbot is in "exit" mode
        let isExited = false;

        // Add event listener to input form
        inputForm.addEventListener('submit', function (event) {
            // Prevent form submission
            event.preventDefault();

            // Get user input
            const input = inputField.value.trim();

            // Clear input field
            inputField.value = '';

            // If in "exit" mode, only allow "4" to restart
            if (isExited) {
                if (input === '4') {
                    isExited = false;
                    showMainMenu();
                } else {
                    addChatbotMessage("Invalid input. Please type '4' to restart.");
                }
                return;
            }

            // Validate input (must be a number)
            if (!/^\d+$/.test(input)) {
                addChatbotMessage("Invalid input. Please enter a number.");
                showMainMenu();
                return;
            }

            // Handle user input
            handleUserInput(Number(input));
        });

        // Function to handle user input
        function handleUserInput(option) {
            const currentTime = new Date().toLocaleTimeString([], { hour: '2-digit', minute: "2-digit" });

            switch (option) {
                case 1:
                    addUserMessage("1", currentTime);
                    addChatbotMessage("You selected: Ask a question. What would you like to know?", currentTime);
                    break;
                case 2:
                    addUserMessage("2", currentTime);
                    addChatbotMessage("You selected: Learn about my skills. Here are some of my skills:\n\n- Web Development\n- Data Analysis\n- AI Integration", currentTime);
                    break;
                case 3:
                    addUserMessage("3", currentTime);
                    showMainMenu();
                    return;
                case 4:
                    addUserMessage("4", currentTime);
                    addChatbotMessage("You selected: Exit. Thank you! If you wish to chat again, type '4' to restart.", currentTime, true);
                    isExited = true;
                    return;
                default:
                    addUserMessage(option.toString(), currentTime);
                    addChatbotMessage("You entered an invalid number. Please try again.", currentTime);
                    break;
            }

            // Show options after each response
            addChatbotMessage("Click 3 for Main Menu or 4 to Exit.", currentTime);
        }

        // Function to show the main menu
        function showMainMenu() {
            const menu = "\n\nMain Menu:\n1. Ask a question\n2. Learn about my skills\n3. Main Menu\n4. Exit";
            addChatbotMessage(menu);
        }

        // Function to add a chatbot message
        function addChatbotMessage(text, time, isExitMessage = false) {
            const message = document.createElement('div');
            message.classList.add('chatbot-message');
            if (isExitMessage) {
                message.innerHTML = `<div class="exit-frame"><p class="chatbot-text" sentTime="${time || ''}">${text}</p></div>`;
            } else {
                message.innerHTML = `<p class="chatbot-text" sentTime="${time || ''}">${text}</p>`;
            }
            conversation.appendChild(message);
            conversation.scrollTop = conversation.scrollHeight;
        }

        // Function to add a user message
        function addUserMessage(text, time) {
            const message = document.createElement('div');
            message.classList.add('chatbot-message', 'user-message');
            message.innerHTML = `<p class="chatbot-text" sentTime="${time || ''}">${text}</p>`;
            conversation.appendChild(message);
            conversation.scrollTop = conversation.scrollHeight;
        }
    </script>
</body>
</html>
